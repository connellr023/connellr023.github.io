import{s as F,n as N}from"../chunks/scheduler.CFpRn4Gx.js";import{S as O,i as B,k as D,l as V,m as A,n as E,o as G,p as J,e as r,s as _,c as o,q as c,f as v,r as m,g as a,d as n}from"../chunks/index.DZF8ZFNM.js";import{P as K}from"../chunks/ProjectPage.CzrV-WF5.js";import"../chunks/global.DBfXOjui.js";const Q=!0,et=Object.freeze(Object.defineProperty({__proto__:null,prerender:Q},Symbol.toStringTag,{value:"Module"}));function U(M){let e,x="overview",i,l,C=`This project is a <b>CLI</b> tool that sorts images based on their content.
    It uses a pre-trained <b>ResNet</b> model to classify images and then sort them
    into folders based on the classification.`,w,p,P="note",$,f,k=`It is worth noting that I did not train the model. The weights were obtained
    from the <b><a target="_blank" href="https://github.com/LaurentMazare/tch-rs">tch.rs</a></b>
    repository which is a Rust wrapper for <b>Libtorch</b>. For this reason, I
    do not consider this project particularly complex but it was a good exercise
    in working with <b>Rust</b> and <b>Libtorch</b>.`,y,h,I="technical_details",T,u,S=`The main concept that makes this project work is the comparison of <b>Cosine Similarity</b>
    values between the various image embeddings generated by the <b>ResNet</b> model.
    Following that, a heuristic clustering algorithm is used to group the images
    into a specified number of classes. There is more detail in the project repository
    if you are interested in the specifics.`,H,d,R="images",L,b,q="Below are images that demonstrate the usage of this tool.",j,g,z='<img class="fade-in" src="/images/tensort/1.png" alt="tensort - all images"/> <img class="fade-in" src="/images/tensort/2.png" alt="tensort command help"/> <img class="fade-in" src="/images/tensort/3.png" alt="tensort test run and sorting"/> <img class="fade-in" src="/images/tensort/4.png" alt="tensort sample sorted images"/>';return{c(){e=r("h2"),e.textContent=x,i=_(),l=r("p"),l.innerHTML=C,w=_(),p=r("h2"),p.textContent=P,$=_(),f=r("p"),f.innerHTML=k,y=_(),h=r("h2"),h.textContent=I,T=_(),u=r("p"),u.innerHTML=S,H=_(),d=r("h2"),d.textContent=R,L=_(),b=r("p"),b.textContent=q,j=_(),g=r("div"),g.innerHTML=z,this.h()},l(t){e=o(t,"H2",{class:!0,"data-svelte-h":!0}),c(e)!=="svelte-mht1ex"&&(e.textContent=x),i=v(t),l=o(t,"P",{class:!0,"data-svelte-h":!0}),c(l)!=="svelte-91mmht"&&(l.innerHTML=C),w=v(t),p=o(t,"H2",{class:!0,"data-svelte-h":!0}),c(p)!=="svelte-fwhops"&&(p.textContent=P),$=v(t),f=o(t,"P",{class:!0,"data-svelte-h":!0}),c(f)!=="svelte-1vos1r1"&&(f.innerHTML=k),y=v(t),h=o(t,"H2",{class:!0,"data-svelte-h":!0}),c(h)!=="svelte-1bh9fry"&&(h.textContent=I),T=v(t),u=o(t,"P",{class:!0,"data-svelte-h":!0}),c(u)!=="svelte-15c6hd"&&(u.innerHTML=S),H=v(t),d=o(t,"H2",{class:!0,"data-svelte-h":!0}),c(d)!=="svelte-1usk35e"&&(d.textContent=R),L=v(t),b=o(t,"P",{class:!0,"data-svelte-h":!0}),c(b)!=="svelte-yusa4h"&&(b.textContent=q),j=v(t),g=o(t,"DIV",{class:!0,"data-svelte-h":!0}),c(g)!=="svelte-1qja3hn"&&(g.innerHTML=z),this.h()},h(){m(e,"class","left-bar fade-in"),m(l,"class","left-bar fade-in"),m(p,"class","left-bar fade-in"),m(f,"class","left-bar fade-in"),m(h,"class","left-bar fade-in"),m(u,"class","left-bar fade-in"),m(d,"class","left-bar fade-in"),m(b,"class","left-bar"),m(g,"class","image-container")},m(t,s){a(t,e,s),a(t,i,s),a(t,l,s),a(t,w,s),a(t,p,s),a(t,$,s),a(t,f,s),a(t,y,s),a(t,h,s),a(t,T,s),a(t,u,s),a(t,H,s),a(t,d,s),a(t,L,s),a(t,b,s),a(t,j,s),a(t,g,s)},p:N,d(t){t&&(n(e),n(i),n(l),n(w),n(p),n($),n(f),n(y),n(h),n(T),n(u),n(H),n(d),n(L),n(b),n(j),n(g))}}}function W(M){let e,x;return e=new K({props:{title:"tensort",category:"learning_projects",repository:["connellr023/tensort","https://github.com/connellr023/tensort"],$$slots:{default:[U]},$$scope:{ctx:M}}}),{c(){D(e.$$.fragment)},l(i){V(e.$$.fragment,i)},m(i,l){A(e,i,l),x=!0},p(i,[l]){const C={};l&1&&(C.$$scope={dirty:l,ctx:i}),e.$set(C)},i(i){x||(E(e.$$.fragment,i),x=!0)},o(i){G(e.$$.fragment,i),x=!1},d(i){J(e,i)}}}class st extends O{constructor(e){super(),B(this,e,null,W,F,{})}}export{st as component,et as universal};
