import{s as me,n as he}from"../chunks/scheduler.CFpRn4Gx.js";import{S as de,i as ve,k as be,l as xe,m as we,n as _e,o as ke,p as Ce,e as n,s as c,c as i,q as r,f as p,r as o,g as s,d as a}from"../chunks/index.DZF8ZFNM.js";import{P as ge}from"../chunks/ProjectPage.CzrV-WF5.js";import"../chunks/global.DBfXOjui.js";const Te=!0,Se=Object.freeze(Object.defineProperty({__proto__:null,prerender:Te},Symbol.toStringTag,{value:"Module"}));function ye(J){let l,$="overview",u,f,S=`Snake++ is a re-implementation of the classic Snake game in C++ without the
    use of any libraries except <i>X11</i> (on Linux) and <i>Win32</i> (on Windows)
    for graphics. The game features a few different power-ups that can be collected
    by the snake to change its behavior. Additionally, it includes enemies and obstacles
    that the player must avoid.`,j,m,K=`This project is based on a school project which can be found <b><a href="/projects/snesk">here</a></b>. While it is based on the same concept, this project is a complete
    re-write and underlying game logic has been changed to allow for more
    features.`,I,h,Q="gameplay",G,d,Y=`The game is controlled using the arrow keys. The snake will move in the
    direction of the last arrow key pressed. Below are the different power-ups
    that can be collected by the snake.`,q,v,Z="<i>Food</i> increases the length of the snake and is the colour purple.",A,b,ee=`<i>Portal power-up</i> allows the snake to go through one side of the screen
    and come out the other side. It is the colour blue.`,N,x,te=`<i>Attack power-up</i> allows the snake to eat exactly one ghost. It is the colour
    red.`,W,w,se=`<i>Rainbow power-up</i> is a combination of all the power-ups and appears multiple
    shades of orange. The effect has a time limit and will be de-applied after the
    time limit is reached. Time limit is shown in the bottom UI bar.`,z,_,ae=`Ghosts randomly spawn and wander around the screen. If the snake collides
    with a ghost when it does not have the attack power-up, the snake is reset
    to its starting length and score resets to 0. The game ends when the snake
    runs out of lives.`,B,k,le=`The game also features some other collectibles such as <i>stars</i> and
    <i>hearts</i> which increase the score and lives respectively.`,D,C,ne="technical_improvements",O,g,ie="Some technical improvements over the original project are below.",F,T,re=`An <i>interval API</i> was implemented to allow for more control over timing
    during the game loop. It leveraged C++ lambda functions to allow for easy implementation
    of custom intervals.`,R,y,oe=`An <i>entity</i> class was implemented to allow for easy creation of game objects.
    It used virtual dispatch to allow all entities to be updated and rendered in
    a generic way. The entity class also allowed for easy creation of new entities
    by extending the class.`,U,P,ce=`All sprites and font characters are represented as a 64-bit integer to be
    rendered as 8x8 pixel sprites. This is an improvement over the old version
    which used a 2D array of characters to represent sprites.`,V,H,pe="images",X,L,ue="Below are some images of the game in action.",E,M,fe='<img class="fade-in" src="/images/snake-plus-plus/start.PNG" alt="Snake++ start screen"/> <img class="fade-in" src="/images/snake-plus-plus/normal.PNG" alt="Snake++ normal snake"/> <img class="fade-in" src="/images/snake-plus-plus/attack.PNG" alt="Snake++ attack snake"/> <img class="fade-in" src="/images/snake-plus-plus/portal.PNG" alt="Snake++ portal snake"/> <img class="fade-in" src="/images/snake-plus-plus/rainbow.PNG" alt="Snake++ rainbow snake"/> <img class="fade-in" src="/images/snake-plus-plus/over.PNG" alt="Snake++ game over screen"/>';return{c(){l=n("h2"),l.textContent=$,u=c(),f=n("p"),f.innerHTML=S,j=c(),m=n("p"),m.innerHTML=K,I=c(),h=n("h2"),h.textContent=Q,G=c(),d=n("p"),d.textContent=Y,q=c(),v=n("p"),v.innerHTML=Z,A=c(),b=n("p"),b.innerHTML=ee,N=c(),x=n("p"),x.innerHTML=te,W=c(),w=n("p"),w.innerHTML=se,z=c(),_=n("p"),_.textContent=ae,B=c(),k=n("p"),k.innerHTML=le,D=c(),C=n("h2"),C.textContent=ne,O=c(),g=n("p"),g.textContent=ie,F=c(),T=n("p"),T.innerHTML=re,R=c(),y=n("p"),y.innerHTML=oe,U=c(),P=n("p"),P.textContent=ce,V=c(),H=n("h2"),H.textContent=pe,X=c(),L=n("p"),L.textContent=ue,E=c(),M=n("div"),M.innerHTML=fe,this.h()},l(e){l=i(e,"H2",{class:!0,"data-svelte-h":!0}),r(l)!=="svelte-mht1ex"&&(l.textContent=$),u=p(e),f=i(e,"P",{class:!0,"data-svelte-h":!0}),r(f)!=="svelte-p07f0f"&&(f.innerHTML=S),j=p(e),m=i(e,"P",{class:!0,"data-svelte-h":!0}),r(m)!=="svelte-10275e3"&&(m.innerHTML=K),I=p(e),h=i(e,"H2",{class:!0,"data-svelte-h":!0}),r(h)!=="svelte-gr5gu0"&&(h.textContent=Q),G=p(e),d=i(e,"P",{class:!0,"data-svelte-h":!0}),r(d)!=="svelte-1bb6u2u"&&(d.textContent=Y),q=p(e),v=i(e,"P",{class:!0,"data-svelte-h":!0}),r(v)!=="svelte-m1ye7n"&&(v.innerHTML=Z),A=p(e),b=i(e,"P",{class:!0,"data-svelte-h":!0}),r(b)!=="svelte-4i0r5h"&&(b.innerHTML=ee),N=p(e),x=i(e,"P",{class:!0,"data-svelte-h":!0}),r(x)!=="svelte-167a0ae"&&(x.innerHTML=te),W=p(e),w=i(e,"P",{class:!0,"data-svelte-h":!0}),r(w)!=="svelte-uaptdh"&&(w.innerHTML=se),z=p(e),_=i(e,"P",{class:!0,"data-svelte-h":!0}),r(_)!=="svelte-gah2g4"&&(_.textContent=ae),B=p(e),k=i(e,"P",{class:!0,"data-svelte-h":!0}),r(k)!=="svelte-2r7ud9"&&(k.innerHTML=le),D=p(e),C=i(e,"H2",{class:!0,"data-svelte-h":!0}),r(C)!=="svelte-1vcrzhn"&&(C.textContent=ne),O=p(e),g=i(e,"P",{class:!0,"data-svelte-h":!0}),r(g)!=="svelte-pytq2q"&&(g.textContent=ie),F=p(e),T=i(e,"P",{class:!0,"data-svelte-h":!0}),r(T)!=="svelte-xcnw19"&&(T.innerHTML=re),R=p(e),y=i(e,"P",{class:!0,"data-svelte-h":!0}),r(y)!=="svelte-10qvts2"&&(y.innerHTML=oe),U=p(e),P=i(e,"P",{class:!0,"data-svelte-h":!0}),r(P)!=="svelte-1suwql7"&&(P.textContent=ce),V=p(e),H=i(e,"H2",{class:!0,"data-svelte-h":!0}),r(H)!=="svelte-1usk35e"&&(H.textContent=pe),X=p(e),L=i(e,"P",{class:!0,"data-svelte-h":!0}),r(L)!=="svelte-1a43ciy"&&(L.textContent=ue),E=p(e),M=i(e,"DIV",{class:!0,"data-svelte-h":!0}),r(M)!=="svelte-1m0xm9k"&&(M.innerHTML=fe),this.h()},h(){o(l,"class","left-bar fade-in"),o(f,"class","left-bar fade-in"),o(m,"class","left-bar fade-in"),o(h,"class","left-bar fade-in"),o(d,"class","left-bar fade-in"),o(v,"class","left-bar fade-in"),o(b,"class","left-bar fade-in"),o(x,"class","left-bar fade-in"),o(w,"class","left-bar fade-in"),o(_,"class","left-bar fade-in"),o(k,"class","left-bar fade-in"),o(C,"class","left-bar fade-in"),o(g,"class","left-bar fade-in"),o(T,"class","left-bar fade-in"),o(y,"class","left-bar fade-in"),o(P,"class","left-bar fade-in"),o(H,"class","left-bar fade-in"),o(L,"class","left-bar fade-in"),o(M,"class","image-container")},m(e,t){s(e,l,t),s(e,u,t),s(e,f,t),s(e,j,t),s(e,m,t),s(e,I,t),s(e,h,t),s(e,G,t),s(e,d,t),s(e,q,t),s(e,v,t),s(e,A,t),s(e,b,t),s(e,N,t),s(e,x,t),s(e,W,t),s(e,w,t),s(e,z,t),s(e,_,t),s(e,B,t),s(e,k,t),s(e,D,t),s(e,C,t),s(e,O,t),s(e,g,t),s(e,F,t),s(e,T,t),s(e,R,t),s(e,y,t),s(e,U,t),s(e,P,t),s(e,V,t),s(e,H,t),s(e,X,t),s(e,L,t),s(e,E,t),s(e,M,t)},p:he,d(e){e&&(a(l),a(u),a(f),a(j),a(m),a(I),a(h),a(G),a(d),a(q),a(v),a(A),a(b),a(N),a(x),a(W),a(w),a(z),a(_),a(B),a(k),a(D),a(C),a(O),a(g),a(F),a(T),a(R),a(y),a(U),a(P),a(V),a(H),a(X),a(L),a(E),a(M))}}}function Pe(J){let l,$;return l=new ge({props:{title:"Snake++",category:"learning_projects",repository:["connellr023/snake-plus-plus","https://github.com/connellr023/snake-plus-plus"],$$slots:{default:[ye]},$$scope:{ctx:J}}}),{c(){be(l.$$.fragment)},l(u){xe(l.$$.fragment,u)},m(u,f){we(l,u,f),$=!0},p(u,[f]){const S={};f&1&&(S.$$scope={dirty:f,ctx:u}),l.$set(S)},i(u){$||(_e(l.$$.fragment,u),$=!0)},o(u){ke(l.$$.fragment,u),$=!1},d(u){Ce(l,u)}}}class je extends de{constructor(l){super(),ve(this,l,null,Pe,me,{})}}export{je as component,Se as universal};
